levels = c(1, 2, 3),
labels = c("Good", "Bad", "Somewhere in between"))
table(hospital$health, hospital$hosp)
setwd("~/UNI/Linear and Logistic Regression/project_2")
#install.packages("lmtest")
#install.packages("xtable")
#install.packages("tidyquant")
#install.packages("ggpubr")
#install.packages("pscl")
#install.packages("pROC")
#install.packages("ResourceSelection")
#install.packages("glmtoolbox")
library(glmtoolbox)
library(pROC)
library(ResourceSelection)
library(zoo)
library(lmtest)
library(xtable)
library(ggplot2)
library(tidyquant)
library(pscl)
library(DescTools)
library(ggpubr)
hospital <- read.delim("hospital.txt", sep = ";")
hospital$hosp_cat <- factor(hospital$hosp,
levels = c(0, 1),
labels = c("0 days", "1+ days"))
hospital$health <- factor(hospital$health,
levels = c(1, 2, 3),
labels = c("Good", "Bad", "Somewhere in between"))
table(hospital$health, hospital$hosp)
prop.table(table(hospital$health, hospital$hosp), margin = 1)
hospital$health<- relevel(hospital$health, "Good")
model_0 <- glm(hosp ~ health, data = hospital)
summary(model_0)
confint(model_0)
exp(model_0$coefficients)
model_0$coefficients
exp(confint(model_0))
nullmod <- glm(hosp~1, family="binomial", data = hospital)
1-(logLik(model_0) - 0.5)/logLik(nullmod) #get mcfadden
AIC(model_0)
BIC(model_0)
PseudoR2(model_0)
#LR test
summary(model_0)
1-pchisq(865.09-847.67, 5920-5918)
anova(model_0,nullmod)
lrtest(model_0, nullmod)
xtable(lrtest(model_0, nullmod))
#predint
(x0 <- data.frame(health = c(1,2,3)))
x0$health <- factor(x0$health,
levels = c(1, 2, 3),
labels = c("Good", "Bad", "Somewhere in between"))
ilink <- family(model_0)$linkinv
pd <- (predict(model_0, newdata = x0, type = "link", se.fit=TRUE))
transform(pd, Fitted = ilink(fit), Upper = ilink(fit + (2 * se.fit)),
Lower = ilink(fit - (2 * se.fit)))
model_1 <- glm(hosp ~ age, data = hospital)
summary(model_1)
exp(model_1$coefficients)
confint(model_1)
exp(confint(model_1))
AIC(model_1)
BIC(model_1)
confint(model_1)
1- (logLik(model_1)-0.5)/(logLik(nullmod))
lrtest(nullmod,model_1)
exp(model_1$coefficients*5)
exp(5*0.003927902)
exp(5*0.005556923)
exp(model_1$coefficients)
#Only MA
png('outputs/ma.png')
ggplot(hospital, aes(x= age, y=hosp)) +
geom_smooth(method = 'gam', fill = 'blue', alpha = 0.1) +
xlab("Age") + ylab("Hosp")
dev.off()
temp <- NULL
model_1 <- glm(hosp ~ age, data = hospital)
pd <- data.frame(predict(model_1, newdata = hospital, type = "link", se.fit=TRUE))
pd <- transform(pd, Fitted = ilink(fit), Upper = ilink(fit + (2 * se.fit)),
Lower = ilink(fit - (2 * se.fit)))f
temp = cbind(hospital, pd)
summary(model_1)
confint(model_1)
PseudoR2(model_1)
lrtest(model_1, nullmod)
#Model and MA
png('outputs/pred_1_ma.png')
ggplot(temp, aes(x= age, y=hosp)) +
geom_smooth(method = 'gam', linetype = "dashed", fill = 'blue', alpha = 0.1) +
geom_line(aes(y = fit), color = "red", size = 1) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.1, size = 0.2, col = 'red', fill = 'red') +
xlab("Age") + ylab("Hosp")
dev.off()
model_2 <-  glm(hosp ~ age + I(age^2), data=hospital)
confint(model_2)
PseudoR2(model_2)
pd <- data.frame(predict(model_2, newdata = hospital, type = "link", se.fit=TRUE))
pd <- transform(pd, Fitted_2 = ilink(fit), Upper_2 = ilink(fit + (2 * se.fit)),
Lower_2 = ilink(fit - (2 * se.fit)))
pd$residual.scale <- NULL
temp = cbind(temp, pd$Fitted_2, pd$Upper_2, pd$Lower_2)
png('outputs/pred_12_ma.png')
ggplot(temp, aes(x= age, y=hosp)) +
geom_smooth(method = 'gam', linetype = "dashed", fill = 'blue', alpha = 0.1) +
geom_line(aes(y = Fitted), color = "red", size = 1,linetype = "twodash") +
geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.1, size = 0.2, col = 'red', fill = 'red') +
geom_line(aes(y = pd$Fitted_2), color = "green", size = 1) +
geom_ribbon(aes(ymin = pd$Lower_2, ymax = pd$Upper_2), alpha = 0.1, size = 0.2, col = 'green', fill = 'green') +
xlab("Age") + ylab("Hosp")
dev.off()
#Part 2
# PART 2
# a)
# Factors for sex civilst exercise work_norm
hospital <- read.delim("hospital.txt", sep = ";")
hospital$sex <- factor(hospital$sex,
levels = c(1, 2),
labels = c("Male", "Female"))
hospital$civilst <- factor(hospital$civilst,
levels = c(1, 2, 3, 4),
labels = c("unmarried", "married", "divorced/seperated", "widow/widower"))
hospital$exercise <- factor(hospital$exercise,
levels = c(0, 1, 2, 3, 4),
labels = c("practically none", "sometimes", "once a week", "twice a week", "rather strenously at least twice a week"))
hospital$work_norm <- factor(hospital$work_norm,
levels = c(1, 2, 3, 4, 5),
labels = c("1-19 hours", "20–34 hours", "35–97 hours", "farmer or self-employed", "other, does not work"))
table(hospital$sex)
table(hospital$civilst)
xtable(table(hospital$civilst))
xtable(table(hospital$exercise))
xtable(table(hospital$work_norm))
# plot pairs
ggplot(hospital, aes(x= age, y=inc_hh)) +
geom_smooth()+
xlab("Age") + ylab("Hosp")
ggplot(hospital, aes(x= age, y=inc_tot)) +
geom_smooth()+
xlab("Age") + ylab("Hosp")
ggplot(hospital, aes(x= inc_tot, y=inc_hh)) +
geom_smooth()+
xlab("Age") + ylab("Hosp")
hospital$hosp_cat <- factor(hospital$hosp,
levels = c(0, 1),
labels = c("0 days", "1+ days"))
hospital$health <- factor(hospital$health,
levels = c(1, 2, 3),
labels = c("Good", "Bad", "Somewhere in between"))
contx <- hospital[, c("age", "inc_hh", "inc_tot")]
xtable(cor(contx))
pairs(contx)
model_3 <- glm(hosp ~ age + I(age^2) + health + sex + civilst + exercise + work_norm + inc_hh + inc_tot, data = hospital)
AIC(model_3)
BIC(model_3)
PseudoR2(model_3, which = "McFadden")
lrtest(model_3,nullmod)
model_r <- update(model_3, . ~ . -health)
lrtest(model_3,model_r)
lrtest(model_3,nullmod)
model_3
AIC(model_3)
BIC(model_3)
PseudoR2(model_3, which = "McFadden")
lrtest(model_3,nullmod)
model_r <- update(model_3, . ~ . -health)
lrtest(model_3,model_r)
model_r <- update(model_3, . ~ . -sex)
lrtest(model_3,model_r)
model_r <- update(model_3, . ~ . -civilst)
lrtest(model_3,model_r)
model_r <- update(model_3, . ~ . -exercise)
lrtest(model_3,model_r)
#Part 4
hospital <- read.delim("hospital.txt", sep = ";")
hospital$sex <- factor(hospital$sex,
levels = c(1, 2),
labels = c("Male", "Female"))
hospital$civilst <- factor(hospital$civilst,
levels = c(1, 2, 3, 4),
labels = c("unmarried", "married", "divorced/seperated", "widow/widower"))
hospital$exercise <- factor(hospital$exercise,
levels = c(0, 1, 2, 3, 4),
labels = c("practically none", "sometimes", "once a week", "twice a week", "rather strenously at least twice a week"))
hospital$work_norm <- factor(hospital$work_norm,
levels = c(1, 2, 3, 4, 5),
labels = c("1-19 hours", "20–34 hours", "35–97 hours", "farmer or self-employed", "other, does not work"))
hospital$new_health <- factor(hospital$health,
levels = c(1, 2, 3),
labels = c("Good", "Not Good", "Not Good"))
hospital$health <- factor(hospital$health,
levels = c(1, 2, 3),
labels = c("Good", "Bad", "Somewhere in between"))
model_0 <- glm(hosp ~ 1, data = hospital)
model_1 <- glm(hosp ~ age, data = hospital)
model_2 <-  glm(hosp ~ age + I(age^2), data=hospital)
model_3 <- glm(hosp ~ age + I(age^2) + health + sex + civilst + exercise + work_norm + inc_hh + inc_tot, data = hospital, family="binomial")
model_4 <- step(model_0, scope = list(lower = model_0, upper = model_3), direction = "both", criterion = 'AIC')
model_5 <- step(model_0, scope = list(lower = model_0, upper = model_3), direction = "both", criterion = 'BIC', k = log(nrow(hospital)))
model_temp = glm(hosp ~ age + I(age^2) + new_health + sex + civilst + exercise + work_norm + inc_hh + inc_tot, data = hospital)
model_6 <- step(model_0, scope = list(lower = model_0, upper = model_temp), direction = "both", criterion = 'BIC', k = log(nrow(hospital)))
pred.phat <- cbind(
hospital,
p.0 = predict(model_0, type = "response"),
p.1 = predict(model_1, type = "response"),
p.2 = predict(model_2, type = "response"),
p.3 = predict(model_4, type = "response"),
p.4 = predict(model_5, type = "response"),
p.5 = predict(model_6, type = "response"))
head(pred.phat)
pred.phat$yhat.0 <- as.numeric(pred.phat$p.0 > 0.5)
pred.phat$yhat.1 <- as.numeric(pred.phat$p.1 > 0.5)
pred.phat$yhat.2 <- as.numeric(pred.phat$p.2 > 0.5)
pred.phat$yhat.3 <- as.numeric(pred.phat$p.3 > 0.5)
pred.phat$yhat.4 <- as.numeric(pred.phat$p.4 > 0.5)
pred.phat$yhat.5 <- as.numeric(pred.phat$p.5 > 0.5)
row.01 <- table(hospital$hosp)
(col.01.1 <- table(pred.phat$yhat.1))
(confusion.1 <- table(pred.phat$hosp, pred.phat$yhat.1))
(confusion.2 <- table(pred.phat$hosp, pred.phat$yhat.2))
(confusion.3 <- table(pred.phat$hosp, pred.phat$yhat.3))
(confusion.4 <- table(pred.phat$hosp, pred.phat$yhat.4))
(confusion.5 <- table(pred.phat$hosp, pred.phat$yhat.5))
(roc.0 <- roc(hosp ~ p.0, data = pred.phat))
roc.df.0 <- coords(roc.0, transpose = FALSE)
roc.df.0$model <- "NULL"
roc.1 <- roc(hosp ~ p.1, data = pred.phat)
roc.df.1 <- coords(roc.1, transpose = FALSE)
roc.df.1$model <- "1. (a)"
roc.2 <- roc(hosp ~ p.2, data = pred.phat)
roc.df.2 <- coords(roc.2, transpose = FALSE)
roc.df.2$model <- "1. (c)"
roc.3 <- roc(hosp ~ p.3, data = pred.phat)
roc.df.3 <- coords(roc.3, transpose = FALSE)
roc.df.3$model <- "2. (d)"
roc.4 <- roc(hosp ~ p.4, data = pred.phat)
roc.df.4 <- coords(roc.4, transpose = FALSE)
roc.df.4$model <- "2. (e1)"
roc.5 <- roc(hosp ~ p.5, data = pred.phat)
roc.df.5 <- coords(roc.5, transpose = FALSE)
roc.df.5$model <- "2. (e2)"
roc.df <- rbind(roc.df.0, roc.df.1, roc.df.2, roc.df.3, roc.df.4, roc.df.5)
png('outputs/rocs.png',width=750, height=400)
ggplot(roc.df, aes(specificity, sensitivity,
color = model)) +
geom_path(size = 1) +
coord_fixed() +       # square plotting area
scale_x_reverse() +   # Reverse scale on the x-axis!
labs(title = "ROC-curves for all the models") +
theme(text = element_text(size = 14))
dev.off()
(aucs <-
data.frame(
model = c("NULL","1. (a)", "1. (c)", "2. (d)", "2. (e1)", "2. (e2)"),
auc = c(auc(roc.0), auc(roc.1), auc(roc.2),
auc(roc.3), auc(roc.4), auc(roc.5)),
lwr = c(ci(roc.0)[1], ci(roc.1)[1],
ci(roc.2)[1],
ci(roc.3)[1], ci(roc.4)[1],
ci(roc.5)[1]),
upr = c(ci(auc(roc.0))[3], ci(auc(roc.1))[3],
ci(auc(roc.2))[3],
ci(auc(roc.3))[3], ci(auc(roc.4))[3],
ci(auc(roc.5))[3])))
xtable(aucs)
roc.test(roc.0, roc.3)
roc.test(roc.1, roc.3)
roc.test(roc.2, roc.3)
roc.test(roc.4, roc.3)
roc.test(roc.5, roc.3)
# Hosmer-Lemeshow-test####
# Illustrating example: plot in sorted p-order
# order(variable) gives the ranks for the values in variable.
# It can then be used to sort the data frame:
pred.sort <- pred.phat[order(pred.phat$p.3), ]
pred.sort$rank <- seq(1, nrow(pred.sort))
head(pred.sort)
# Divide the n=500 observations into g=10 groups
n <- nrow(pred.sort)
p <- 0.21
g <- 2 + p
# with ng = 50 observations each:
ng <- n/g
p1 <- ggplot(pred.sort, aes(rank, p.3)) +
geom_point() +
geom_jitter(aes(y = hosp), height = 0.01) +
geom_vline(xintercept = seq(ng, nrow(pred.sort) - ng, ng)) +
labs(title = "Model 2.(d): Estimated probabilities by increasing size",
caption = "g = 2 groups",
x = "(i) = 1,...,n", y = "p-hat") +
theme(text = element_text(size = 12))
n <- nrow(pred.sort)
p <- 0.21
g <- 4 + p
# with ng = 50 observations each:
ng <- n/g
p2 <- ggplot(pred.sort, aes(rank, p.3)) +
geom_point() +
geom_jitter(aes(y = hosp), height = 0.01) +
geom_vline(xintercept = seq(ng, nrow(pred.sort) - ng, ng)) +
labs(title = "Model 2.(d) Estimated probabilities by increasing size",
caption = "g = 4 groups",
x = "(i) = 1,...,n", y = "p-hat") +
theme(text = element_text(size = 12))
n <- nrow(pred.sort)
p <- 0.21
g <- 6 + p
# with ng = 50 observations each:
ng <- n/g
p3 <- ggplot(pred.sort, aes(rank, p.3)) +
geom_point() +
geom_jitter(aes(y = hosp), height = 0.01) +
geom_vline(xintercept = seq(ng, nrow(pred.sort) - ng, ng)) +
labs(title = "Model 2.(d) Estimated probabilities by increasing size",
caption = "g = 6 groups",
x = "(i) = 1,...,n", y = "p-hat") +
theme(text = element_text(size = 12))
n <- nrow(pred.sort)
p <- 0.21
g <- 10 + p
# with ng = 50 observations each:
ng <- n/g
p4 <- ggplot(pred.sort, aes(rank, p.3)) +
geom_point() +
geom_jitter(aes(y = hosp), height = 0.01) +
geom_vline(xintercept = seq(ng, nrow(pred.sort) - ng, ng)) +
labs(title = "Model 2.(d) Estimated probabilities by increasing size",
caption = "g = 10 groups",
x = "(i) = 1,...,n", y = "p-hat") +
theme(text = element_text(size = 12))
png('outputs/multiple_plots.png', width=800, height=600)
ggarrange(p1, p2, p3, p4,
ncol = 2, nrow = 2)
dev.off()
# A for-loop to set the group numbers
g <- 2 + p
pred.sort$group <- NA
for (k in seq(1, g)) {
I <- (k - 1)*ng + seq(1, ng)
pred.sort$group[I] <- k
}
head(pred.sort)
OE1 <- merge(aggregate(hosp ~ group, data = pred.sort, FUN = sum),
aggregate(p.3 ~ group, data = pred.sort, FUN = sum))
OE0 <- OE1
OE0$hosp <- ng - OE1$hosp
OE0$p.3 <- ng - OE1$p.3
OE1$outcome <- "Y = 1"
OE0$outcome <- "Y = 0"
(OE <- rbind(OE1, OE0))
g1 <- ggplot(OE, aes(group, p.3, color = outcome)) +
geom_line(aes(linetype = "expected"), size = 1) +
geom_line(aes(y = hosp, linetype = "observed"), size = 1) +
labs(title = "Model 3: Observed and expected in each group",
y = "number of observations") +
theme(text = element_text(size = 6)) +
scale_x_continuous(breaks = seq(1, g))
g <- 4 + p
pred.sort$group <- NA
for (k in seq(1, g)) {
I <- (k - 1)*ng + seq(1, ng)
pred.sort$group[I] <- k
}
head(pred.sort)
OE1 <- merge(aggregate(hosp ~ group, data = pred.sort, FUN = sum),
aggregate(p.3 ~ group, data = pred.sort, FUN = sum))
OE0 <- OE1
OE0$hosp <- ng - OE1$hosp
OE0$p.3 <- ng - OE1$p.3
OE1$outcome <- "Y = 1"
OE0$outcome <- "Y = 0"
(OE <- rbind(OE1, OE0))
g2 <- ggplot(OE, aes(group, p.3, color = outcome)) +
geom_line(aes(linetype = "expected"), size = 1) +
geom_line(aes(y = hosp, linetype = "observed"), size = 1) +
labs(title = "Model 3: Observed and expected in each group",
y = "number of observations") +
theme(text = element_text(size = 6)) +
scale_x_continuous(breaks = seq(1, g))
g <- 6 + p
pred.sort$group <- NA
for (k in seq(1, g)) {
I <- (k - 1)*ng + seq(1, ng)
pred.sort$group[I] <- k
}
head(pred.sort)
OE1 <- merge(aggregate(hosp ~ group, data = pred.sort, FUN = sum),
aggregate(p.3 ~ group, data = pred.sort, FUN = sum))
OE0 <- OE1
OE0$hosp <- ng - OE1$hosp
OE0$p.3 <- ng - OE1$p.3
OE1$outcome <- "Y = 1"
OE0$outcome <- "Y = 0"
(OE <- rbind(OE1, OE0))
g3 <- ggplot(OE, aes(group, p.3, color = outcome)) +
geom_line(aes(linetype = "expected"), size = 1) +
geom_line(aes(y = hosp, linetype = "observed"), size = 1) +
labs(title = "Model 3: Observed and expected in each group",
y = "number of observations") +
theme(text = element_text(size = 6)) +
scale_x_continuous(breaks = seq(1, g))
g <- 10 + p
pred.sort$group <- NA
for (k in seq(1, g)) {
I <- (k - 1)*ng + seq(1, ng)
pred.sort$group[I] <- k
}
head(pred.sort)
OE1 <- merge(aggregate(hosp ~ group, data = pred.sort, FUN = sum),
aggregate(p.3 ~ group, data = pred.sort, FUN = sum))
OE0 <- OE1
OE0$hosp <- ng - OE1$hosp
OE0$p.3 <- ng - OE1$p.3
OE1$outcome <- "Y = 1"
OE0$outcome <- "Y = 0"
(OE <- rbind(OE1, OE0))
g4 <- ggplot(OE, aes(group, p.3, color = outcome)) +
geom_line(aes(linetype = "expected"), size = 1) +
geom_line(aes(y = hosp, linetype = "observed"), size = 1) +
labs(title = "Model 3: Observed and expected in each group",
y = "number of observations") +
theme(text = element_text(size = 6)) +
scale_x_continuous(breaks = seq(1, g))
png('outputs/multiple_plots_2.png', width=800, height=600)
ggarrange(g1, g2, g3, g4,
ncol = 2, nrow = 2)
dev.off()
hoslem.test(pred.sort$hosp, pred.sort$p.3,g = 10)
hoslem.test(pred.sort$hosp, pred.sort$p.3,g = 6)
hoslem.test(pred.sort$hosp, pred.sort$p.3,g = 4)
hoslem.test(pred.sort$hosp, pred.sort$p.3,g = 2)
min(OE$hosp)
OE
OE0$hosp
OE$hosp
min(OE$hosp)
# A for-loop to set the group numbers
g <- 2 + p
pred.sort$group <- NA
for (k in seq(1, g)) {
I <- (k - 1)*ng + seq(1, ng)
pred.sort$group[I] <- k
}
head(pred.sort)
OE1 <- merge(aggregate(hosp ~ group, data = pred.sort, FUN = sum),
aggregate(p.3 ~ group, data = pred.sort, FUN = sum))
OE0 <- OE1
OE0$hosp <- ng - OE1$hosp
OE0$p.3 <- ng - OE1$p.3
OE1$outcome <- "Y = 1"
OE0$outcome <- "Y = 0"
(OE <- rbind(OE1, OE0))
g1 <- ggplot(OE, aes(group, p.3, color = outcome)) +
geom_line(aes(linetype = "expected"), size = 1) +
geom_line(aes(y = hosp, linetype = "observed"), size = 1) +
labs(title = "Model 3: Observed and expected in each group",
y = "number of observations") +
theme(text = element_text(size = 6)) +
scale_x_continuous(breaks = seq(1, g))
min(OE$hosp)
OE
g <- 4 + p
pred.sort$group <- NA
for (k in seq(1, g)) {
I <- (k - 1)*ng + seq(1, ng)
pred.sort$group[I] <- k
}
head(pred.sort)
OE1 <- merge(aggregate(hosp ~ group, data = pred.sort, FUN = sum),
aggregate(p.3 ~ group, data = pred.sort, FUN = sum))
OE0 <- OE1
OE0$hosp <- ng - OE1$hosp
OE0$p.3 <- ng - OE1$p.3
OE1$outcome <- "Y = 1"
OE0$outcome <- "Y = 0"
(OE <- rbind(OE1, OE0))
g2 <- ggplot(OE, aes(group, p.3, color = outcome)) +
geom_line(aes(linetype = "expected"), size = 1) +
geom_line(aes(y = hosp, linetype = "observed"), size = 1) +
labs(title = "Model 3: Observed and expected in each group",
y = "number of observations") +
theme(text = element_text(size = 6)) +
scale_x_continuous(breaks = seq(1, g))
min(OE$hosp)
g <- 6 + p
pred.sort$group <- NA
for (k in seq(1, g)) {
I <- (k - 1)*ng + seq(1, ng)
pred.sort$group[I] <- k
}
head(pred.sort)
OE1 <- merge(aggregate(hosp ~ group, data = pred.sort, FUN = sum),
aggregate(p.3 ~ group, data = pred.sort, FUN = sum))
OE0 <- OE1
OE0$hosp <- ng - OE1$hosp
OE0$p.3 <- ng - OE1$p.3
OE1$outcome <- "Y = 1"
OE0$outcome <- "Y = 0"
(OE <- rbind(OE1, OE0))
g3 <- ggplot(OE, aes(group, p.3, color = outcome)) +
geom_line(aes(linetype = "expected"), size = 1) +
geom_line(aes(y = hosp, linetype = "observed"), size = 1) +
labs(title = "Model 3: Observed and expected in each group",
y = "number of observations") +
theme(text = element_text(size = 6)) +
scale_x_continuous(breaks = seq(1, g))
min(OE$hosp)
g <- 10 + p
pred.sort$group <- NA
